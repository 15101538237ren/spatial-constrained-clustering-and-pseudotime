panel.background = element_blank(),
axis.text.y = element_text(colour = "black"),
axis.title.x = element_text(colour = "black", size=10),
legend.title = element_text(size=8))
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black"),
axis.title.x = element_text(colour = "black", size=10),
legend.title = element_text(size=10))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(target_fig_name)
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=6, height=4, dpi=300)
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=5, height=3, dpi=300)
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=10),
legend.title = element_text(size=10))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=5, height=3, dpi=300)
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=6),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=5, height=3, dpi=300)
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
egend.key.height= unit(1, 'cm'),
legend.key.width= unit(1, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(1, 'cm'),
legend.key.width= unit(1, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(1, 'cm'),
legend.key.width= unit(.5, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.7, 'cm'),
legend.key.width= unit(.5, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.5, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red") +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.0, 3.5, 4.0),
labels = c(3.0, 3.5, 4.0)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.2, 3.5, 3.8),
labels = c(3.2, 3.5, 3.8)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.1, 3.5, 3.9),
labels = c(3.1, 3.5, 3.9)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.1, 3.5, 3.9),
labels = c(3.0, 3.5, 4.0)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF)) +
geom_bar(stat="identity",fill="red", alpha=.6, width=.4) +
coord_flip() +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity",fill="red", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.1, 3.5, 3.9),
labels = c(3.0, 3.5, 4.0)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.1, 3.5, 3.9),
labels = c(3.0, 3.5, 4.0)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8),
axis.title.x = element_text(colour = "black", size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=8),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.1, 3.5, 3.9),
labels = c(3.0, 3.5, 4.0)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black", size=8, face="bold"),
axis.title.x = element_text(colour = "black", size=8, face="bold"),
legend.title = element_text(size=8, face="bold"),
legend.text = element_text(size=8, face="bold"),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=4, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.1, 3.5, 3.9),
labels = c(3.0, 3.5, 4.0)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(colour = "black", size=8, face="bold"),
axis.text.y = element_text(colour = "black", size=8, face="bold"),
axis.title.x = element_text(colour = "black", size=8, face="bold"),
legend.title = element_text(size=8, face="bold"),
legend.text = element_text(size=8, face="bold"),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=5, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.1, 3.5, 3.9),
labels = c(3.0, 3.5, 4.0)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(colour = "black", size=8, face="bold"),
axis.text.y = element_text(colour = "black", size=8, face="bold"),
axis.title.x = element_text(colour = "black", size=8, face="bold"),
legend.position="bottomright",
legend.title = element_text(size=8, face="bold"),
legend.text = element_text(size=8, face="bold"),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=5, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.1, 3.5, 3.9),
labels = c(3.0, 3.5, 4.0)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(colour = "black", size=8, face="bold"),
axis.text.y = element_text(colour = "black", size=8, face="bold"),
axis.title.x = element_text(colour = "black", size=8, face="bold"),
legend.position="bottom",
legend.title = element_text(size=8, face="bold"),
legend.text = element_text(size=8, face="bold"),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".pdf"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=5, height=3, dpi=300)
# Reorder following the value of another column:
results.table.p %>%
mutate(Term = reorder(Term, log10WF)) %>%
ggplot( aes(x=Term, y=log10WF,fill = log10WF)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
coord_flip() +
scale_fill_gradient(name="-log10(adj.pval)", low="blue", high="red",
limits = c(3.0, 4.0),
breaks = c(3.1, 3.5, 3.9),
labels = c(3.0, 3.5, 4.0)) +
xlab("") + ylab("-log10(adj.pval)") + theme_bw()+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(colour = "black", size=8, face="bold"),
axis.text.y = element_text(colour = "black", size=8, face="bold"),
axis.title.x = element_text(colour = "black", size=8, face="bold"),
legend.title = element_text(size=8, face="bold"),
legend.text = element_text(size=8, face="bold"),
legend.key.height= unit(.3, 'cm'),
legend.key.width= unit(.3, 'cm'))
target_fig_name = paste(c("topGO_terms_of_cluster_", cluster_id, ".svg"), collapse = '')
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=5, height=3, dpi=300)
install.packages("svglite")
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=5, height=3, dpi=300)
ggsave(paste(c(input_dir_fp, target_fig_name), collapse = '/'), width=5, height=3, dpi=300)
